digraph "Graphical Class Hierarchy"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="true_type",height=0.2,width=0.4,color="grey75"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="is_defined\< S, T, std\l::enable_if_t\< std::is\l_object\< T \>::value &&!std\l::is_pointer\< T \>::value &&\l(sizeof(T) \> 0)\>",height=0.2,width=0.4,color="black",URL="$d7/da5/structis__defined_3_01S_00_01T_00_01std_1_1enable__if__t_3_01std_1_1is__object_3_01T_01_4_1_1valeb19f0a4ac48ab8c937dcfaa7761b1e1.html"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="o2::framework::has\l_root_dictionary\< T,\l std::conditional_t\<\l false, class_member_checker\l\< decltype(std::declval\< T\l \>().Class()) \>, void \> \>",height=0.2,width=0.4,color="black",URL="$dc/d7c/structo2_1_1framework_1_1has__root__dictionary_3_01T_00_01std_1_1conditional__t_3_01false_00_01ccb1cca226960df9152960ce2672fe716.html"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="o2::framework::is_container\l\< T, std::conditional_t\l\< false, class_member_checker\l\< typename T::value_type, typename\l T::size_type, typename T::allocator\l_type, typename T::iterator, typename\l T::const_iterator, decltype(std::declval\l\< T \>().size()), decltype(std::declval\<\l T \>().begin()), decltype(std::declval\< T\l \>().end()), decltype(std::declval\< T \>().cbegin\l()), decltype(std::declval\< T \>().cend()) \>, void \> \>",height=0.2,width=0.4,color="black",URL="$d8/db9/structo2_1_1framework_1_1is__container_3_01T_00_01std_1_1conditional__t_3_01false_00_01class__mef973c0cbe4966a22bb7bbd2841ae7c0e.html"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="o2::framework::is_forced\l_non_messageable\< T, typename\l std::enable_if\< std::is_same\l\< typename T::non_messageable,\l MarkAsNonMessageable \>::value\l \>::type \>",height=0.2,width=0.4,color="black",URL="$df/ddf/structo2_1_1framework_1_1is__forced__non__messageable_3_01T_00_01typename_01std_1_1enable__if_3_9497e1cc58c5001cfb1a9a57a11a8068.html"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="o2::framework::is_specialization\l\< Ref\< Args...\>, Ref \>",height=0.2,width=0.4,color="black",URL="$da/d1e/structo2_1_1framework_1_1is__specialization_3_01Ref_3_01Args_8_8_8_4_00_01Ref_01_4.html"];
}
